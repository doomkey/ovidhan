
name: Build Android Release

on:
  push:
    tags:
      - 'v*.*.*'
  
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'


      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24' 
          cache: 'pnpm' 

      - name: Install dependencies
        run: pnpm install

      - name: Install Capacitor CLI
        run: pnpm install -g @capacitor/cli

      - name: Build web assets
        run: pnpm run build

      - name: Sync Capacitor assets
        run: pnpm exec cap sync android


      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
          if [ $? -ne 0 ]; then
            echo "Failed to decode keystore. Make sure the KEYSTORE_BASE64 secret is set correctly."
            exit 1
          fi

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: ./android

      - name: Build APK
        run: ./gradlew assembleRelease
        working-directory: ./android

      - name: Sign APK
        run: |
          APKSIGNER_PATH=$(find $ANDROID_HOME/build-tools -name "apksigner" | sort -r | head -n 1)
          if [ -z "$APKSIGNER_PATH" ]; then
            echo "apksigner not found!"
            exit 1
          fi
          
          echo "Using apksigner at: $APKSIGNER_PATH"
          
          # Run the apksigner command
          "$APKSIGNER_PATH" sign \
            --ks android/app/release.keystore \
            --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.KEY_ALIAS_PASSWORD }}" \
            --out android/app/build/outputs/apk/release/app-release-signed.apk \
            android/app/build/outputs/apk/release/app-release-unsigned.apk

      # debug
      - name: List files in build output
        run: find android/app/build/outputs -type f
        if: always() 

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # The name of the release will be the same as the tag (e.g., "v1.0.1")
          name: Release ${{ github.ref_name }}
          # The files to upload to the release.
          files: android/app/build/outputs/apk/release/app-release-signed.apk
